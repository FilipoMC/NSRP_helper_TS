/* Optimized production build generated by CommandKit */
import {
  MPartnership
} from "./chunk-7AILDUPC.js";
import {
  main
} from "./chunk-GSB7PNNP.js";
import {
  __name
} from "./chunk-4HQ2LG3N.js";

// src/subcommands/partner/src/find-by-user.ts
import { EmbedBuilder } from "discord.js";
async function find_by_user_default({ client, interaction }) {
  await interaction.deferReply({ ephemeral: true });
  const userOption = interaction.options.getUser("user");
  const idOption = interaction.options.getString("id");
  if (!userOption && !idOption) {
    await interaction.editReply("\u274C You need to specify a user or ID.");
    return;
  }
  const userID = userOption?.id ?? idOption;
  const partnerships = await MPartnership.find({ rep: userID });
  if (partnerships.length === 0) {
    await interaction.editReply("\u274C No partnerships found.");
    return;
  }
  const fields = partnerships.map((partnership) => {
    return {
      name: partnership.logMessageID,
      value: `**Made by:** <@${partnership.by}>
**Discord invite:** ${partnership.invite ? "https://" + partnership.invite : "Not found"}
**Message ID:** [${partnership.messageID}](<https://discord.com/channels/${main.mainServer}/${main.partnerChannel}/${partnership.messageID}>)
**Log message ID:** [${partnership.logMessageID}](<https://discord.com/channels/${main.mainServer}/${main.partnerLogChannel}/${partnership.logMessageID}>)
`,
      inline: true
    };
  });
  const embed = new EmbedBuilder().setTitle("Partnerships").setDescription(fields.length > 25 ? "Not showing all partnerships." : "All partnerships for this user:").setFields(fields.slice(0, 24)).setColor("Green");
  await interaction.editReply({ embeds: [embed] });
}
__name(find_by_user_default, "default");

export {
  find_by_user_default
};
