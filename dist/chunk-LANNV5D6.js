/* Optimized production build generated by CommandKit */
import {
  MUserBlacklist
} from "./chunk-QJI4AMEY.js";
import {
  MPartnership
} from "./chunk-7AILDUPC.js";
import {
  emojis
} from "./chunk-GSB7PNNP.js";
import {
  __name
} from "./chunk-4HQ2LG3N.js";

// src/subcommands/dev/database/src/delete.ts
import { EmbedBuilder } from "discord.js";
var fail = emojis.red_cross;
var success = emojis.green_checkmark;
async function delete_default({ client, interaction }) {
  await interaction.deferReply({ ephemeral: true });
  const model = interaction.options.getString("model");
  const id = interaction.options.getString("id");
  let idReady;
  let deletedDoc;
  switch (model) {
    case "blacklist":
      if (isNaN(parseInt(id))) {
        await interaction.editReply(`${fail} Provide a valid ID.`);
        return;
      }
      idReady = parseInt(id);
      deletedDoc = await MUserBlacklist.findOneAndDelete({ user_id: idReady });
      break;
    case "partnership":
      deletedDoc = await MPartnership.findOneAndDelete({ logMessageID: id });
      break;
  }
  const embed = new EmbedBuilder().setTitle("Blacklist deleted.").setDescription(
    `Deleted blacklist: 
\`\`\` ${JSON.stringify(deletedDoc, null, 3)} \`\`\``
  );
  await interaction.followUp({ embeds: [embed] });
}
__name(delete_default, "default");

export {
  delete_default
};
