/* Optimized production build generated by CommandKit */
import {
  MPartnership
} from "./chunk-7AILDUPC.js";
import {
  main
} from "./chunk-GSB7PNNP.js";
import {
  __name
} from "./chunk-4HQ2LG3N.js";

// src/subcommands/partner/src/find.ts
import { ActionRowBuilder, ButtonBuilder, ButtonStyle, ComponentType, EmbedBuilder } from "discord.js";
import { parse as ms } from "@lukeed/ms";
async function find_default({ interaction, client }) {
  await interaction.deferReply({ ephemeral: true });
  const id = interaction.options.getString("id");
  const document = await MPartnership.findOne({ logMessageID: id });
  if (!document) {
    await interaction.followUp("Partnership not found.");
    return;
  }
  const messageURL = `https://discord.com/channels/${main.mainServer}/${main.partnerChannel}/${document.messageID}`;
  const logMessageURL = `https://discord.com/channels/${main.mainServer}/${main.partnerLogChannel}/${document.logMessageID}`;
  const embed = new EmbedBuilder().setTitle("Partnership:").setDescription(
    `**Made by:** <@!${document.by}> (${document.by})
**Rep:** <@!${document.rep}> (${document.rep})
**Ad:** Press the button below.
**Invite:** https://${document.invite}
**Message ID: ** [${document.messageID}](${messageURL})
**Log message ID:** [${document.logMessageID}](${logMessageURL})`
  ).setColor("Green");
  const buttonID = `partner-find-${interaction.user.id}-${Date.now()}`;
  const actionRow = new ActionRowBuilder({ components: [new ButtonBuilder({ customId: buttonID, label: "Server ad", style: ButtonStyle.Success })] });
  const sentMessage = await interaction.followUp({ embeds: [embed], components: [actionRow] });
  const collector = sentMessage.createMessageComponentCollector({ componentType: ComponentType.Button, filter: (b) => b.customId === buttonID, time: ms("1m") });
  collector.on("collect", async (subInteraction) => {
    subInteraction.reply({ ephemeral: true, content: `\`\`\` ${document.ad} \`\`\`` });
  });
}
__name(find_default, "default");

export {
  find_default
};
